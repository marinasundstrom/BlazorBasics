@using System.Text.Json
@inject HttpClient Http

<h1>HttpClient</h1>

<p>Fetching JSON data, deserialize, and display it.</p>

@if(person is null) 
{
    <text>Loading...</text>
}
else 
{
    <h2>@person.FirstName @person.LastName</h2>

    <dl>
        <dt>Gender</dt>
        <dd>@person.Gender</dd>

        <dt>Age</dt>
        <dd>@person.Age</dd>
    </dl>

    @if(person.Address is not null) 
    {
        <h3>Address</h3>

        <dl>
            <dt>Street address</dt>
            <dd>@person.Address.StreetAddress</dd>

            <dt>City</dt>
            <dd>@person.Address.City</dd>

            <dt>State</dt>
            <dd>@person.Address.State</dd>
        </dl>
    }

    @if(person.PhoneNumbers?.Any() ?? false) 
    {
        <h3>Phone numbers</h3>

        @foreach(var phoneNumber in person.PhoneNumbers) 
        {
            <dl>
                <dt>Type</dt>
                <dd>@phoneNumber.Type</dd>

                <dt>Number</dt>
                <dd>@phoneNumber.Number</dd>
            </dl>
        }
    }
}

@code {
    Person? person;

    protected override async Task OnInitializedAsync()
    {
        JsonSerializerOptions jsonSerializerOptions = new () {
            PropertyNameCaseInsensitive = true
        };
        
        person = await Http.GetFromJsonAsync<Person?>("sample-data.json", jsonSerializerOptions);
    }

    record Person(string FirstName, string LastName, string Gender, int Age, Address? Address, IEnumerable<PhoneNumber>? PhoneNumbers);

    record Address(string StreetAddress, string City, string State);

    record PhoneNumber(string Type, string Number);
}